name: Delivery to GitHub Pages

on:
  schedule:
    - cron: 0 7 1 * * # at 07:00 on day-of-month 1, UTC

  workflow_dispatch:
    inputs:
      reason:
        description: The reason for dispatching it manually.
        type: string
        default: manual healthcheck
        required: true

  workflow_run:
    workflows: [ Continuous integration ]
    types: [ completed ]
    branches: [ main ]

concurrency:
  group: github-pages
  cancel-in-progress: true

jobs:
  build:
    name: Building
    runs-on: ubuntu-latest
    if: ${{ contains(fromJSON('[null, "success"]'), github.event.workflow_run.conclusion) }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4.1.1
        with: { fetch-depth: 0 }
      - name: Set up Node.js environment
        uses: actions/setup-node@v4.0.1
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json
          check-latest: true
      - name: Install dependencies
        run: npm ci

      - name: Build the application
        run: npm run build
      - name: Upload the site
        uses: actions/upload-pages-artifact@v3.0.0
        with: { path: dist }

  deploy:
    name: Deploying
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Publish it to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.3

  notify:
    name: Notifying
    needs: [ build, deploy ]
    runs-on: ubuntu-latest
    if: failure() || success()

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4.1.1
        with: { fetch-depth: 0 }

      - name: Send notification
        uses: ./.github/actions/notify
        continue-on-error: true
        with:
          emoji: ðŸš€
          channel: ${{ secrets.SLACK_WEBHOOK }}
          success: ${{ ! contains(needs.*.result, 'failure') }}
